[  {    "type": "delete",    "url": "/subtype/:id",    "title": "Delete a subscription type",    "name": "DeleteSubType",    "group": "SubType",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Body",            "description": "<p>Subscription type deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription type with the given ID was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subTypes.js",    "groupTitle": "SubType"  },  {    "type": "get",    "url": "/subtype/:id",    "title": "Get a specific subscription type",    "name": "GetOneSubType",    "group": "SubType",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "SubType",            "optional": false,            "field": "Body",            "description": "<p>The requested subscription type</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n   \"_id\": \"5cf9883d70c7e2e9aef4465f\",\n   \"name\": \"SSL RENEWAL\"\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription type with the given ID was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subTypes.js",    "groupTitle": "SubType"  },  {    "type": "get",    "url": "/subtypes/",    "title": "Get all subscription types",    "name": "GetSubType",    "group": "SubType",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Body",            "description": "<p>User information</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{     \n   \"_id\": \"5cf9883d70c7e2e9aef4465f\",\n   \"name\": \"SSL RENEWAL\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>No subscription types found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subTypes.js",    "groupTitle": "SubType"  },  {    "type": "post",    "url": "/subtypes",    "title": "Add a subscription type",    "name": "PostSubType",    "group": "SubType",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "SubType",            "optional": false,            "field": "Body",            "description": "<p>The newly created subscription type</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n   \"_id\": \"5cf9883d70c7e2e9aef4465f\",\n   \"name\": \"SSL RENEWAL\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Error validating the subscription type body, error enclosed</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "500",            "description": "<p>Subscription Type already exists</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subTypes.js",    "groupTitle": "SubType"  },  {    "type": "put",    "url": "/subtype/:id",    "title": "Update a subscription type",    "name": "PutSubType",    "group": "SubType",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "SubType",            "optional": false,            "field": "Body",            "description": "<p>The updated subscription type</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n   \"_id\": \"5cf9883d70c7e2e9aef4465f\",\n   \"name\": \"SSL RENEWAL\" *\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Error validating the subscription type body, error enclosed</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription type with given ID was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subTypes.js",    "groupTitle": "SubType"  },  {    "type": "delete",    "url": "/subscriptions/:id",    "title": "Delete a subscription for the current user",    "name": "DeleteSub",    "group": "Subscriptions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Body",            "description": "<p>Subscription deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription <code>id</code> was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subscriptions.js",    "groupTitle": "Subscriptions"  },  {    "type": "get",    "url": "/subscriptions/",    "title": "Get all subscriptions for current user",    "name": "GetAllSub",    "group": "Subscriptions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Subscription",            "optional": false,            "field": "Body",            "description": "<p>Array of Subscriptions</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n    {subscription1},\n    {subscription2}\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>No subscriptions found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subscriptions.js",    "groupTitle": "Subscriptions"  },  {    "type": "get",    "url": "/subscriptions/:id",    "title": "Get a specific subscription for the current user",    "name": "GetOneSub",    "group": "Subscriptions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Subscription",            "optional": false,            "field": "Body",            "description": "<p>The requested subscription</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n    \"reminders\": [\n      1\n    ],\n    \"_id\": \"{ObjectId}\",\n    \"name\": \"Server SSL Cert\",\n    \"subType\": \"SSL RENEWAL\",\n    \"owner\": \"{ObjectId}\",\n    \"expirationDate\": \"2019-07-14\",\n    \"notes\": \"Test notes yay!\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription with the given ID was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subscriptions.js",    "groupTitle": "Subscriptions"  },  {    "type": "post",    "url": "/subscriptions",    "title": "Add a subscription for the current user",    "name": "PostSub",    "group": "Subscriptions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Subscription",            "optional": false,            "field": "Body",            "description": "<p>The newly created subscription</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n    \"reminders\": [\n      1\n    ],\n    \"_id\": \"{ObjectId}\",\n    \"name\": \"Server SSL Cert\",\n    \"subType\": \"SSL RENEWAL\",\n    \"owner\": \"{ObjectId}\",\n    \"expirationDate\": \"2019-07-14\",\n    \"notes\": \"Test notes yay!\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Error validating the subscription body, error enclosed</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subscriptions.js",    "groupTitle": "Subscriptions"  },  {    "type": "put",    "url": "/subscriptions/:id",    "title": "Update a subscription for the current user",    "name": "PutSub",    "group": "Subscriptions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Subscription",            "optional": false,            "field": "Body",            "description": "<p>The updated subscription</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\n    \"reminders\": [\n      1\n    ],\n    \"_id\": \"{ObjectId}\",\n    \"name\": \"Server SSL Cert\",\n    \"subType\": \"SSL RENEWAL\",\n    \"owner\": \"{ObjectId}\",\n    \"expirationDate\": \"2019-07-14\",\n    \"notes\": \"Test notes yay!\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Error validating the subscription body, error enclosed</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>The subscription <code>id</code> was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/subscriptions.js",    "groupTitle": "Subscriptions"  },  {    "type": "get",    "url": "/users/me",    "title": "Get current user",    "name": "GetUser",    "group": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Body",            "description": "<p>User information { &quot;_id&quot;: &quot;{ObjectId}&quot;, &quot;name&quot;: &quot;testules&quot;, &quot;email&quot;: &quot;dostestes@email.com&quot;, &quot;__v&quot;: 0 }</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users",    "title": "Login user",    "name": "LoginUser",    "group": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "JWT",            "optional": false,            "field": "x-auth-token",            "description": "<p>Authorization token provided at login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Body",            "description": "<p>User information { &quot;_id&quot;: &quot;{ObjectId}&quot;, &quot;name&quot;: &quot;testules&quot;, &quot;email&quot;: &quot;dostestes@email.com&quot;, &quot;__v&quot;: 0 }</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Error validating the body, message attached</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "500",            "description": "<p>User already exists.  Email addresses must be unique</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users"  }]
